<?php
 #[AllowDynamicProperties]
 class WP_Locale { public $weekday = array(); public $weekday_initial = array(); public $weekday_abbrev = array(); public $month = array(); public $month_genitive = array(); public $month_abbrev = array(); public $meridiem = array(); public $text_direction = 'ltr'; public $number_format = array(); public $list_item_separator; public $word_count_type; public function __construct() { $this->init(); $this->register_globals(); } public function init() { $this->weekday[0] = __( 'Sunday' ); $this->weekday[1] = __( 'Monday' ); $this->weekday[2] = __( 'Tuesday' ); $this->weekday[3] = __( 'Wednesday' ); $this->weekday[4] = __( 'Thursday' ); $this->weekday[5] = __( 'Friday' ); $this->weekday[6] = __( 'Saturday' ); $this->weekday_initial[ $this->weekday[0] ] = _x( 'S', 'Sunday initial' ); $this->weekday_initial[ $this->weekday[1] ] = _x( 'M', 'Monday initial' ); $this->weekday_initial[ $this->weekday[2] ] = _x( 'T', 'Tuesday initial' ); $this->weekday_initial[ $this->weekday[3] ] = _x( 'W', 'Wednesday initial' ); $this->weekday_initial[ $this->weekday[4] ] = _x( 'T', 'Thursday initial' ); $this->weekday_initial[ $this->weekday[5] ] = _x( 'F', 'Friday initial' ); $this->weekday_initial[ $this->weekday[6] ] = _x( 'S', 'Saturday initial' ); $this->weekday_abbrev[ $this->weekday[0] ] = __( 'Sun' ); $this->weekday_abbrev[ $this->weekday[1] ] = __( 'Mon' ); $this->weekday_abbrev[ $this->weekday[2] ] = __( 'Tue' ); $this->weekday_abbrev[ $this->weekday[3] ] = __( 'Wed' ); $this->weekday_abbrev[ $this->weekday[4] ] = __( 'Thu' ); $this->weekday_abbrev[ $this->weekday[5] ] = __( 'Fri' ); $this->weekday_abbrev[ $this->weekday[6] ] = __( 'Sat' ); $this->month['01'] = __( 'January' ); $this->month['02'] = __( 'February' ); $this->month['03'] = __( 'March' ); $this->month['04'] = __( 'April' ); $this->month['05'] = __( 'May' ); $this->month['06'] = __( 'June' ); $this->month['07'] = __( 'July' ); $this->month['08'] = __( 'August' ); $this->month['09'] = __( 'September' ); $this->month['10'] = __( 'October' ); $this->month['11'] = __( 'November' ); $this->month['12'] = __( 'December' ); $this->month_genitive['01'] = _x( 'January', 'genitive' ); $this->month_genitive['02'] = _x( 'February', 'genitive' ); $this->month_genitive['03'] = _x( 'March', 'genitive' ); $this->month_genitive['04'] = _x( 'April', 'genitive' ); $this->month_genitive['05'] = _x( 'May', 'genitive' ); $this->month_genitive['06'] = _x( 'June', 'genitive' ); $this->month_genitive['07'] = _x( 'July', 'genitive' ); $this->month_genitive['08'] = _x( 'August', 'genitive' ); $this->month_genitive['09'] = _x( 'September', 'genitive' ); $this->month_genitive['10'] = _x( 'October', 'genitive' ); $this->month_genitive['11'] = _x( 'November', 'genitive' ); $this->month_genitive['12'] = _x( 'December', 'genitive' ); $this->month_abbrev[ $this->month['01'] ] = _x( 'Jan', 'January abbreviation' ); $this->month_abbrev[ $this->month['02'] ] = _x( 'Feb', 'February abbreviation' ); $this->month_abbrev[ $this->month['03'] ] = _x( 'Mar', 'March abbreviation' ); $this->month_abbrev[ $this->month['04'] ] = _x( 'Apr', 'April abbreviation' ); $this->month_abbrev[ $this->month['05'] ] = _x( 'May', 'May abbreviation' ); $this->month_abbrev[ $this->month['06'] ] = _x( 'Jun', 'June abbreviation' ); $this->month_abbrev[ $this->month['07'] ] = _x( 'Jul', 'July abbreviation' ); $this->month_abbrev[ $this->month['08'] ] = _x( 'Aug', 'August abbreviation' ); $this->month_abbrev[ $this->month['09'] ] = _x( 'Sep', 'September abbreviation' ); $this->month_abbrev[ $this->month['10'] ] = _x( 'Oct', 'October abbreviation' ); $this->month_abbrev[ $this->month['11'] ] = _x( 'Nov', 'November abbreviation' ); $this->month_abbrev[ $this->month['12'] ] = _x( 'Dec', 'December abbreviation' ); $this->meridiem['am'] = __( 'am' ); $this->meridiem['pm'] = __( 'pm' ); $this->meridiem['AM'] = __( 'AM' ); $this->meridiem['PM'] = __( 'PM' ); $thousands_sep = __( 'number_format_thousands_sep' ); $thousands_sep = str_replace( ' ', '&nbsp;', $thousands_sep ); $this->number_format['thousands_sep'] = ( 'number_format_thousands_sep' === $thousands_sep ) ? ',' : $thousands_sep; $decimal_point = __( 'number_format_decimal_point' ); $this->number_format['decimal_point'] = ( 'number_format_decimal_point' === $decimal_point ) ? '.' : $decimal_point; $this->list_item_separator = __( ', ' ); if ( isset( $GLOBALS['text_direction'] ) ) { $this->text_direction = $GLOBALS['text_direction']; } elseif ( 'rtl' === _x( 'ltr', 'text direction' ) ) { $this->text_direction = 'rtl'; } $this->word_count_type = $this->get_word_count_type(); } public function get_weekday( $weekday_number ) { return $this->weekday[ $weekday_number ]; } public function get_weekday_initial( $weekday_name ) { return $this->weekday_initial[ $weekday_name ]; } public function get_weekday_abbrev( $weekday_name ) { return $this->weekday_abbrev[ $weekday_name ]; } public function get_month( $month_number ) { return $this->month[ zeroise( $month_number, 2 ) ]; } public function get_month_abbrev( $month_name ) { return $this->month_abbrev[ $month_name ]; } public function get_meridiem( $meridiem ) { return $this->meridiem[ $meridiem ]; } public function register_globals() { $GLOBALS['weekday'] = $this->weekday; $GLOBALS['weekday_initial'] = $this->weekday_initial; $GLOBALS['weekday_abbrev'] = $this->weekday_abbrev; $GLOBALS['month'] = $this->month; $GLOBALS['month_abbrev'] = $this->month_abbrev; } public function is_rtl() { return 'rtl' === $this->text_direction; } public function _strings_for_pot() { __( 'F j, Y' ); __( 'g:i a' ); __( 'F j, Y g:i a' ); } public function get_list_item_separator() { return $this->list_item_separator; } public function get_word_count_type() { $word_count_type = is_null( $this->word_count_type ) ? _x( 'words', 'Word count type. Do not translate!' ) : $this->word_count_type; if ( 'characters_excluding_spaces' !== $word_count_type && 'characters_including_spaces' !== $word_count_type ) { $word_count_type = 'words'; } return $word_count_type; } } 